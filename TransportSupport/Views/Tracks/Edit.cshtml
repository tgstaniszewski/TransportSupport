@model TransportSupport.Models.Track


<style>
    body {
        background-image: url('/images/sylwia-bartyzel-442-unsplash.jpg');
        background-repeat: no-repeat;
        background-size: 100% 100%;
    }

    h1 {
        background-image: linear-gradient(#6d94bf, #446E9B 50%, #3e648d);
        border: 1px solid #345578;
        text-align: center;
        color: #fff;
    }

    

    #dvPanel {
        overflow-y: scroll;
        max-height: 500px;
        background-color: rgba(255, 255, 255,0.5);
    }

    #dvMap {
        width: 100%;
        height: 500px
    }

    legend {
        background-color: grey;
        color: white;
        border-radius: 0.25rem;
        text-align: center
    }

    fieldset {
        border: 1px solid #ddd !important;
        padding: 10px;
        background-color: rgba(255, 255, 255,0.5);
    }

    .mapTab {
        box-shadow: 10px 10px 5px grey;
        border: 1px solid #fff
    }
</style>

<h1>Edycja trasy</h1>
<hr />
<div class="row">
    <div class="col-md-6 text-center backgroundInput">
        <form asp-action="Edit">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            
            <input type="hidden" asp-for="ID" />
            <div class="form-group">
                <label asp-for="Name" class="control-label"></label>
                <input asp-for="Name" class="form-control " readonly />
                <span asp-validation-for="Name" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="UrlGoogleMaps" class="control-label"></label>
                <input asp-for="UrlGoogleMaps" class="form-control" readonly />
                <span asp-validation-for="UrlGoogleMaps" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Time" class="control-label"></label>
                <input asp-for="Time" class="form-control" readonly />
                <span asp-validation-for="Time" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Distance" class="control-label"></label>
                <input asp-for="Distance" class="form-control" readonly />
                <span asp-validation-for="Distance" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="ContractorID" class="control-label"></label>
                <select asp-for="ContractorID" class="form-control" asp-items="ViewBag.ContractorID"></select>
                <span asp-validation-for="ContractorID" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Price" class="control-label"></label>
                <input asp-for="Price" class="form-control" />
                <span asp-validation-for="Price" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="UnitOfMeasure" class="control-label"></label>
                <select asp-for="UnitOfMeasure" class="form-control">
                    <option>szt</option>
                    <option>/km</option>
                </select>
                <span asp-validation-for="UnitOfMeasure" class="text-danger"></span>
            </div>
            <div class="form-group">
                <input type="submit" value="Save" class="btn btn-success" />
                <a class="btn btn-danger" asp-action="Index">Anuluj</a>
            </div>
        </form>
    </div>
    <div class="col-md-6">
        <div class="form-group-sm">

            <fieldset>

                <legend>Wyszykaj trasę</legend>

                <input type="text" class="form-control" id="txtSource" placeholder="Podaj miejscowość począdkową" />
                <input type="text" class="form-control" id="txtDestination" placeholder="Podaj miejscowość końcową" />
                <input id="searchButton" type="button" value="Wyszukaj" class="btn btn-primary btn-sm btn-block" />

            </fieldset>
        </div>
        <ul class="nav nav-tabs">
            <li class="nav-item">
                <a class="nav-link active show mapTab" data-toggle="tab" href="#map">Mapa</a>
            </li>
            <li class="nav-item">
                <a class="nav-link mapTab" data-toggle="tab" href="#descriptionRoute">Opis Trasy</a>
            </li>

        </ul>
        <div id="myTabContent" class="tab-content">

            <div class="tab-pane fade active show" id="map">
                <div id="dvMap"></div>
            </div>
            <div class="tab-pane fade" id="descriptionRoute">
                <div id="dvPanel"></div>
            </div>
        </div>
    </div>

</div>

<div>
    
</div>

@section Scripts{
    <script src="https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.22.2/moment.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/moment-duration-format/2.2.2/moment-duration-format.min.js"></script>
    <script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyD-NerhgJMIxa_2ltZaYA5KqAt71pNL5jE&libraries=places"></script>
    <script type="text/javascript">
        document.addEventListener("DOMContentLoaded", function () {
            var source;
            var destination;
            var txtSource = document.getElementById('txtSource');
            var txtDestination = document.getElementById('txtDestination');
            var name = document.getElementById('Name');
            var buttonSearch = document.getElementById('searchButton');


            var directionsDisplay = new google.maps.DirectionsRenderer();

            var directionsService = new google.maps.DirectionsService();


            var warsow = new google.maps.LatLng(52.237049, 21.017532);
            var mapOptions = {
                center: warsow,
                zoom: 13,
                mapTypeId: 'roadmap'
            };

            google.maps.event.addDomListener(window,
                'load',
                function () {
                    new google.maps.places.SearchBox(txtSource);

                    new google.maps.places.SearchBox(txtDestination);

                });

            var map = new google.maps.Map(document.getElementById('dvMap'), mapOptions);



            if (((txtSource.value & txtDestination.value) == "") & name.value != "") {

                var splitName = name.value.split(' - ');
                txtSource.value = splitName[0];
                txtDestination.value = splitName[1];
                GetRoute();
            };


            function GetRoute() {
                directionsDisplay.setMap(map);
                directionsDisplay.setPanel(document.getElementById('dvPanel'));


                source = document.getElementById("txtSource").value;
                destination = document.getElementById("txtDestination").value;


                var request = {
                    origin: source,
                    destination: destination,
                    travelMode: google.maps.TravelMode.DRIVING
                };
                directionsService.route(request,
                    function (response, status) {
                        if (status == google.maps.DirectionsStatus.OK) {
                            directionsDisplay.setDirections(response);
                        }
                    });


                var service = new google.maps.DistanceMatrixService();
                service.getDistanceMatrix({
                    origins: [source],
                    destinations: [destination],

                    travelMode: google.maps.TravelMode.DRIVING,
                    unitSystem: google.maps.UnitSystem.METRIC,
                    avoidHighways: false,
                    avoidTolls: false

                },
                    function (response, status) {
                        if (status == google.maps.DistanceMatrixStatus.OK &&
                            response.rows[0].elements[0].status != "ZERO_RESULTS") {
                            var distance = response.rows[0].elements[0].distance.value;
                            var time = response.rows[0].elements[0].duration.value;




                            //timeInput.value = moment.duration(time, 'seconds').format(moment.HTML5_FMT.TIME_SECONDS);

                            document.getElementById('Name').value = source + " - " + destination;
                            document.getElementById('Distance').value = parseInt(distance / 1000);
                            document.getElementById('Time').value = moment.duration(time, 'seconds').format("HH:mm");;
                            document.getElementById('UrlGoogleMaps').value =
                                "https://www.google.com/maps/dir/?api=1&origin=" +
                                source +
                                "&destination=" +
                                destination +
                                "&travelmode=driving";

                        } else {
                            alert("Your Request For Distance Not Available");
                        }
                    });
            };

            buttonSearch.addEventListener('click', GetRoute);

        });

    </script>>
}

